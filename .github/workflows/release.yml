name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "New version for the release (e.g., 1.0.0)"
        required: true
        type: string
      description:
        description: "Release description"
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DCKR_USR }}
          password: ${{ secrets.DCKR_PAT }}

      - name: Build and push breathing-contrib Docker image
        uses: docker/build-push-action@v5
        id: docker-build-breathing
        with:
          context: .
          file: ./Dockerfile.breathing
          push: true
          tags: |
            diverger/gh-magic-matrix-breathing:${{ github.sha }}
            diverger/gh-magic-matrix-breathing:${{ github.event.inputs.version }}
            diverger/gh-magic-matrix-breathing:latest

      - name: Build and push blinking-contrib Docker image
        uses: docker/build-push-action@v5
        id: docker-build-blinking
        with:
          context: .
          file: ./Dockerfile.blinking
          push: true
          tags: |
            diverger/gh-magic-matrix-blinking:${{ github.sha }}
            diverger/gh-magic-matrix-blinking:${{ github.event.inputs.version }}
            diverger/gh-magic-matrix-blinking:latest

      - name: Build and push snake Docker image
        uses: docker/build-push-action@v5
        id: docker-build-snake
        with:
          context: .
          file: ./Dockerfile.snake
          push: true
          tags: |
            diverger/gh-magic-matrix-snake:${{ github.sha }}
            diverger/gh-magic-matrix-snake:${{ github.event.inputs.version }}
            diverger/gh-magic-matrix-snake:latest

      - name: Update action.yml files with new image digests
        run: |
          sed -i "s|image: .*|image: docker://diverger/gh-magic-matrix-breathing@${{ steps.docker-build-breathing.outputs.digest }}|" breathing-contrib/action.yml
          sed -i "s|image: .*|image: docker://diverger/gh-magic-matrix-blinking@${{ steps.docker-build-blinking.outputs.digest }}|" blinking-contrib/action.yml
          sed -i "s|image: .*|image: docker://diverger/gh-magic-matrix-snake@${{ steps.docker-build-snake.outputs.digest }}|" snake/action.yml

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build

      - name: Verify build outputs
        run: |
          echo "Checking built distributions..."
          ls -la dist/

          echo "Verifying breathing-contrib build..."
          test -f dist/breathing-contrib/index.js || { echo "‚ùå ERROR: breathing-contrib build not found at dist/breathing-contrib/index.js"; exit 1; }
          echo "‚úÖ breathing-contrib build verified"

          echo "Verifying blinking-contrib build..."
          test -f dist/blinking-contrib/index.js || { echo "‚ùå ERROR: blinking-contrib build not found at dist/blinking-contrib/index.js"; exit 1; }
          echo "‚úÖ blinking-contrib build verified"

          echo "Verifying snake build..."
          test -d packages/snake/dist || { echo "‚ùå ERROR: snake build not found at packages/snake/dist"; exit 1; }
          echo "‚úÖ snake build verified"

          echo "‚úÖ All build artifacts verified successfully"

      - name: Bump package version
        run: |
          sed -i 's/"version": ".*"/"version": "${{ github.event.inputs.version }}"/' package.json
          sed -i 's/"version": ".*"/"version": "${{ github.event.inputs.version }}"/' packages/breathing-contrib/package.json
          sed -i 's/"version": ".*"/"version": "${{ github.event.inputs.version }}"/' packages/blinking-contrib/package.json
          sed -i 's/"version": ".*"/"version": "${{ github.event.inputs.version }}"/' packages/snake/package.json

      - name: Commit and tag release
        run: |
          VERSION=${{ github.event.inputs.version }}

          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add \
            breathing-contrib/action.yml \
            blinking-contrib/action.yml \
            snake/action.yml \
            package.json \
            packages/*/package.json \
            dist/
          git commit -m "üöÄ Release v$VERSION"
          git tag v$VERSION
          git push origin main --tags

          # Also create major and major.minor tags for easy references (e.g., v1, v1.0)
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            git tag v$( echo $VERSION | cut -d. -f 1-1 ) -f
            git tag v$( echo $VERSION | cut -d. -f 1-2 ) -f
            git push origin --tags --force
          fi

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.description }}
          generateReleaseNotes: true
