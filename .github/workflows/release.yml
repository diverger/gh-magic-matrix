name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "New version for the release (e.g., 1.0.0)"
        required: true
        type: string
      description:
        description: "Release description"
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DCKR_USR }}
          password: ${{ secrets.DCKR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        id: docker-build
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DCKR_USR }}/gh-magic-matrix:${{ github.sha }}
            ${{ secrets.DCKR_USR }}/gh-magic-matrix:${{ github.event.inputs.version }}
            ${{ secrets.DCKR_USR }}/gh-magic-matrix:latest

      - name: Update action.yml with new image digest
        run: |
          sed -i "s|image: .*|image: docker://${{ secrets.DCKR_USR }}/gh-magic-matrix@${{ steps.docker-build.outputs.digest }}|" action.yml

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build

      - name: Bump package version
        run: |
          sed -i 's/"version": ".*"/"version": "${{ github.event.inputs.version }}"/' package.json

      - name: Commit and tag release
        run: |
          VERSION=${{ github.event.inputs.version }}

          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add action.yml package.json
          git commit -m "ðŸš€ Release v$VERSION"
          git tag v$VERSION
          git push origin main --tags

          # Also create major and major.minor tags for easy references (e.g., v1, v1.0)
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            git tag v$( echo $VERSION | cut -d. -f 1-1 ) -f
            git tag v$( echo $VERSION | cut -d. -f 1-2 ) -f
            git push origin --tags --force
          fi

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.description }}
          generateReleaseNotes: true
