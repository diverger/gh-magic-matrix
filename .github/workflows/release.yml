name: release
run-name: Release v${{ inputs.version }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: "New version for the release (e.g., 1.0.0)"
        required: true
        type: string
      description:
        description: "Release description"
        type: string
      registry:
        description: "Container registry to use"
        required: false
        type: choice
        options:
          - ghcr
          - dockerhub
        default: ghcr

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Set registry variables
        id: registry
        run: |
          if [[ "${{ github.event.inputs.registry }}" == "dockerhub" ]]; then
            {
              echo "url=docker.io"
              echo "prefix=diverger"
              echo "login_registry="
            } >> "$GITHUB_OUTPUT"
          else
            {
              echo "url=ghcr.io"
              echo "prefix=ghcr.io/diverger"
              echo "login_registry=ghcr.io"
            } >> "$GITHUB_OUTPUT"
          fi

      - name: Login to Docker Hub
        if: github.event.inputs.registry == 'dockerhub'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DCKR_USR }}
          password: ${{ secrets.DCKR_PAT }}

      - name: Login to GitHub Container Registry
        if: github.event.inputs.registry != 'dockerhub'
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.registry.outputs.login_registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push breathing-contrib Docker image
        uses: docker/build-push-action@v6
        id: docker-build-breathing
        with:
          context: .
          file: ./Dockerfile.breathing
          push: true
          tags: |
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-breathing:${{ github.sha }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-breathing:${{ github.event.inputs.version }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-breathing:latest

      - name: Build and push blinking-contrib Docker image
        uses: docker/build-push-action@v6
        id: docker-build-blinking
        with:
          context: .
          file: ./Dockerfile.blinking
          push: true
          tags: |
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-blinking:${{ github.sha }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-blinking:${{ github.event.inputs.version }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-blinking:latest

      - name: Build and push snake Docker image
        uses: docker/build-push-action@v6
        id: docker-build-snake
        with:
          context: .
          file: ./Dockerfile.snake
          push: true
          tags: |
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-snake:${{ github.sha }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-snake:${{ github.event.inputs.version }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-snake:latest

      - name: Update action.yml files with new image digests
        run: |
          sed -i "s|image: 'docker://[^']*gh-magic-matrix-breathing[^']*'|image: 'docker://${{ steps.registry.outputs.prefix }}/gh-magic-matrix-breathing@${{ steps.docker-build-breathing.outputs.digest }}'|" breathing-contrib/action.yml
          sed -i "s|image: 'docker://[^']*gh-magic-matrix-blinking[^']*'|image: 'docker://${{ steps.registry.outputs.prefix }}/gh-magic-matrix-blinking@${{ steps.docker-build-blinking.outputs.digest }}'|" blinking-contrib/action.yml
          sed -i "s|image: 'docker://[^']*gh-magic-matrix-snake[^']*'|image: 'docker://${{ steps.registry.outputs.prefix }}/gh-magic-matrix-snake@${{ steps.docker-build-snake.outputs.digest }}'|" snake/action.yml

      - uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Bump package version
        run: |
          sed -i 's/"version": ".*"/"version": "${{ github.event.inputs.version }}"/' package.json
          sed -i 's/"version": ".*"/"version": "${{ github.event.inputs.version }}"/' packages/breathing-contrib/package.json
          sed -i 's/"version": ".*"/"version": "${{ github.event.inputs.version }}"/' packages/blinking-contrib/package.json
          sed -i 's/"version": ".*"/"version": "${{ github.event.inputs.version }}"/' packages/snake/package.json

      - name: Commit and tag release
        run: |
          VERSION=${{ github.event.inputs.version }}

          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add \
            breathing-contrib/action.yml \
            blinking-contrib/action.yml \
            snake/action.yml \
            package.json \
            packages/*/package.json
          git commit -m "ðŸš€ Release v$VERSION"
          git tag v$VERSION
          BRANCH="${GITHUB_REF_NAME:-main}"
          git push origin "$BRANCH" --tags

          # Also create major and major.minor tags for easy references (e.g., v1, v1.0)
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            git tag "v$( echo "$VERSION" | cut -d. -f 1-1 )" -f
            git tag "v$( echo "$VERSION" | cut -d. -f 1-2 )" -f
            git push origin --tags --force
          fi

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ github.event.inputs.version }}
          body: ${{ github.event.inputs.description }}
          generateReleaseNotes: true
