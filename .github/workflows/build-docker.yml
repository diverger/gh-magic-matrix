name: Build Docker Images

on:
  workflow_dispatch:
    inputs:
      registry:
        description: "Container registry to use"
        required: false
        type: choice
        options:
          - ghcr
          - dockerhub
        default: ghcr
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3

      - name: Set registry variables
        id: registry
        run: |
          REGISTRY="${{ github.event.inputs.registry }}"
          # Default to ghcr for push events
          if [[ -z "$REGISTRY" ]]; then
            REGISTRY="ghcr"
          fi

          if [[ "$REGISTRY" == "dockerhub" ]]; then
            echo "prefix=diverger" >> $GITHUB_OUTPUT
          else
            echo "prefix=ghcr.io/diverger" >> $GITHUB_OUTPUT
          fi
          echo "selected=$REGISTRY" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        if: steps.registry.outputs.selected == 'dockerhub'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DCKR_USR }}
          password: ${{ secrets.DCKR_PAT }}

      - name: Login to GitHub Container Registry
        if: steps.registry.outputs.selected != 'dockerhub'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push breathing-contrib Docker image
        uses: docker/build-push-action@v5
        id: docker-build-breathing
        with:
          context: .
          file: ./Dockerfile.breathing
          push: true
          tags: |
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-breathing:${{ github.sha }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-breathing:${{ github.ref_name }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-breathing:latest
          cache-from: type=registry,ref=${{ steps.registry.outputs.prefix }}/gh-magic-matrix-breathing:latest
          cache-to: type=inline

      - name: Build and push blinking-contrib Docker image
        uses: docker/build-push-action@v5
        id: docker-build-blinking
        with:
          context: .
          file: ./Dockerfile.blinking
          push: true
          tags: |
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-blinking:${{ github.sha }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-blinking:${{ github.ref_name }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-blinking:latest
          cache-from: type=registry,ref=${{ steps.registry.outputs.prefix }}/gh-magic-matrix-blinking:latest
          cache-to: type=inline

      - name: Build and push snake Docker image
        uses: docker/build-push-action@v5
        id: docker-build-snake
        with:
          context: .
          file: ./Dockerfile.snake
          push: true
          tags: |
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-snake:${{ github.sha }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-snake:${{ github.ref_name }}
            ${{ steps.registry.outputs.prefix }}/gh-magic-matrix-snake:latest
          cache-from: type=registry,ref=${{ steps.registry.outputs.prefix }}/gh-magic-matrix-snake:latest
          cache-to: type=inline

      - name: Image digests
        run: |
          echo "Breathing image digest: ${{ steps.docker-build-breathing.outputs.digest }}"
          echo "Blinking image digest: ${{ steps.docker-build-blinking.outputs.digest }}"
          echo "Snake image digest: ${{ steps.docker-build-snake.outputs.digest }}"
          echo ""
          echo "To use these images, update action.yml files with:"
          echo "  breathing-contrib: docker://${{ steps.registry.outputs.prefix }}/gh-magic-matrix-breathing@${{ steps.docker-build-breathing.outputs.digest }}"
          echo "  blinking-contrib: docker://${{ steps.registry.outputs.prefix }}/gh-magic-matrix-blinking@${{ steps.docker-build-blinking.outputs.digest }}"
          echo "  snake: docker://${{ steps.registry.outputs.prefix }}/gh-magic-matrix-snake@${{ steps.docker-build-snake.outputs.digest }}"
