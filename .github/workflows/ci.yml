name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Type check
        run: bun run type || echo "Type check script not found, skipping..."

      - name: Lint
        run: bun run lint || echo "Lint script not found, skipping..."

      - name: Run tests
        run: bun test || echo "No tests found yet"

  test-local-action:
    runs-on: ubuntu-latest
    needs: lint-and-test
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build actions
        run: bun run build

      - name: Generate breathing contribution (default)
        run: |
          GITHUB_USER_NAME="${{ github.repository_owner }}" \
          GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
          OUTPUT_PATH="dist/breathing-contrib/default.svg" \
          PERIOD="2.5" \
          COLOR_LEVELS="#ebedf0,#9be9a8,#40c463,#30a14e,#216e39" \
          bun dist/breathing-contrib/index.js

      - name: Generate breathing contribution (dark theme)
        run: |
          GITHUB_USER_NAME="${{ github.repository_owner }}" \
          GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
          OUTPUT_PATH="dist/breathing-contrib/dark.svg" \
          PERIOD="3" \
          COLOR_LEVELS="#161b22,#0e4429,#006d32,#26a641,#39d353" \
          bun dist/breathing-contrib/index.js

      - name: Generate breathing contribution (ocean theme)
        run: |
          GITHUB_USER_NAME="${{ github.repository_owner }}" \
          GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
          OUTPUT_PATH="dist/breathing-contrib/ocean.svg" \
          PERIOD="2" \
          COLOR_LEVELS="#ebedf0,#9fc9ff,#6eb7ff,#3d9eff,#0d7fff" \
          bun dist/breathing-contrib/index.js

      - name: Generate blinking contribution (default)
        run: |
          GITHUB_USER_NAME="${{ github.repository_owner }}" \
          GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
          OUTPUT_PATH="dist/blinking-contrib/default.svg" \
          FRAME_DURATION="2" \
          TRANSITION_DURATION="0.5" \
          COLOR_LEVELS="#ebedf0,#9be9a8,#40c463,#30a14e,#216e39" \
          bun dist/blinking-contrib/index.js

      - name: Generate blinking contribution (dark theme)
        run: |
          GITHUB_USER_NAME="${{ github.repository_owner }}" \
          GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
          OUTPUT_PATH="dist/blinking-contrib/dark.svg" \
          FRAME_DURATION="3" \
          TRANSITION_DURATION="1" \
          COLOR_LEVELS="#161b22,#0e4429,#006d32,#26a641,#39d353" \
          bun dist/blinking-contrib/index.js

      - name: Verify all outputs exist
        run: |
          ls -la dist/
          ls -la dist/breathing-contrib/
          ls -la dist/blinking-contrib/
          test -f dist/breathing-contrib/default.svg
          test -f dist/breathing-contrib/dark.svg
          test -f dist/breathing-contrib/ocean.svg
          test -f dist/blinking-contrib/default.svg
          test -f dist/blinking-contrib/dark.svg
          echo "âœ… All SVG files generated successfully"

      - name: Upload PR preview artifacts
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == true
        uses: actions/upload-artifact@v4
        with:
          name: contrib-preview
          path: |
            dist/breathing-contrib/*.svg
            dist/blinking-contrib/*.svg
          retention-days: 7

      - name: Publish to output branch
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false)
        uses: crazy-max/ghaction-github-pages@v4.1.0
        with:
          target_branch: output
          build_dir: dist
          commit_message: "Update output [skip ci]"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
