name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Type check
        run: bun run type || echo "Type check script not found, skipping..."

      - name: Lint
        run: bun run lint || echo "Lint script not found, skipping..."

      - name: Run tests
        run: bun test || echo "No tests found yet"

  test-local-action:
    runs-on: ubuntu-latest
    needs: lint-and-test
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build actions
        run: |
          cd packages/blinking-contrib && bun run build
          cd ../breathing-contrib && bun run build
          cd ../snake && bun run build

      - name: Generate blinking contribution (dark theme)
        run: bun packages/blinking-contrib/dist/index.js
        env:
          INPUT_OUTPUT_PATH: "dist/blinking-contrib/github-contribution-blinking-dark.svg"
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_PALETTE: "github-dark"
          INPUT_DURATION: "4.0"
          INPUT_FADE_IN_DURATION: "0.2"
          INPUT_FADE_OUT_DURATION: "0.4"
          INPUT_ENDING_TEXT: "diverger"
          INPUT_TEXT_FRAME_DURATION: "2.0"
          INPUT_COLOR_LEVELS: "#161b22,#0e4429,#006d32,#26a641,#39d353"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate blinking contribution (classic theme)
        run: bun packages/blinking-contrib/dist/index.js
        env:
          INPUT_OUTPUT_PATH: "dist/blinking-contrib/github-contribution-blinking-classic.svg"
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_PALETTE: "github"
          INPUT_DURATION: "4.0"
          INPUT_FADE_IN_DURATION: "0.2"
          INPUT_FADE_OUT_DURATION: "0.4"
          INPUT_ENDING_TEXT: "diverger"
          INPUT_TEXT_FRAME_DURATION: "2.0"
          INPUT_COLOR_LEVELS: "#ebedf0,#9be9a8,#40c463,#30a14e,#216e39"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate breathing contribution (dark theme)
        run: bun packages/breathing-contrib/dist/index.js
        env:
          INPUT_OUTPUT_PATH: "dist/breathing-contrib/github-contribution-breathing-dark.svg"
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_PALETTE: "github-dark"
          INPUT_DURATION: "3.0"
          INPUT_FADE_IN_DURATION: "0.2"
          INPUT_FADE_OUT_DURATION: "0.4"
          INPUT_ENDING_TEXT: "diverger"
          INPUT_TEXT_FRAME_DURATION: "2.0"
          INPUT_COLOR_LEVELS: "#161b22,#0e4429,#006d32,#26a641,#39d353"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake contribution (light theme with multiple counters)
        run: bun packages/snake/dist/index.js
        env:
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_OUTPUTS: "dist/snake/light.svg?palette=github-light"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          INPUT_COUNTER_DISPLAYS: |
            [
              {"position": "top-left", "text": "GitHub Contributions", "color": "#1f883d", "fontSize": 14, "fontWeight": "bold"},
              {"position": "top-right", "prefix": "Total: ", "suffix": " commits", "showCount": true, "showPercentage": true, "color": "#bf3989", "fontStyle": "italic"}
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake contribution (dark theme)
        run: bun packages/snake/dist/index.js
        env:
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_OUTPUTS: "dist/snake/dark.svg?palette=github-dark"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          INPUT_COUNTER_DISPLAYS: |
            [
              {"position": "follow", "prefix": "üèÜ ", "suffix": " contributions", "color": "#7ee787"}
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with static image (tree.png test)
        run: bun packages/snake/dist/index.js
        env:
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_OUTPUTS: "dist/snake/with-image.svg?palette=github-light"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "top-left",
                "image": "packages/snake/test-outputs/tree.png",
                "imageWidth": 32,
                "imageHeight": 32
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with images in all positions
        run: bun packages/snake/dist/index.js
        env:
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_OUTPUTS: "dist/snake/with-image-all-positions.svg?palette=github-light"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "top-left",
                "image": "packages/snake/test-outputs/tree.png",
                "imageWidth": 24,
                "imageHeight": 24
              },
              {
                "position": "top-right",
                "image": "packages/snake/test-outputs/tree.png",
                "imageWidth": 24,
                "imageHeight": 24
              },
              {
                "position": "bottom-left",
                "image": "packages/snake/test-outputs/tree.png",
                "imageWidth": 24,
                "imageHeight": 24
              },
              {
                "position": "bottom-right",
                "image": "packages/snake/test-outputs/tree.png",
                "imageWidth": 24,
                "imageHeight": 24
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with sprite sheet animation
        run: bun packages/snake/dist/index.js
        env:
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_OUTPUTS: "dist/snake/with-sprite-sheet.svg?palette=github-light"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "follow",
                "spriteSheet": "packages/snake/test-outputs/contribution-levels-sprite.png",
                "spriteWidth": 16,
                "spriteHeight": 16,
                "frameCount": 5
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with multi-level sprite sheets
        run: bun packages/snake/dist/index.js
        env:
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_OUTPUTS: "dist/snake/with-multi-level-sprites.svg?palette=github-light"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          INPUT_COUNTER_DEBUG: "true"
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "follow",
                "spriteSheet": "packages/snake/test-outputs/contribution-levels-sprite.png",
                "spriteWidth": 16,
                "spriteHeight": 16,
                "frameCount": 5,
                "levelMappings": {
                  "0": 0,
                  "1-5": 1,
                  "6-10": 2,
                  "11-20": 3,
                  "21+": 4
                }
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with empty cell animation (L0 test)
        run: bun packages/snake/dist/index.js
        env:
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_OUTPUTS: "dist/snake/with-empty-cell-animation.svg?palette=github-light"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "follow",
                "spriteSheet": "packages/snake/test-outputs/contribution-levels-sprite.png",
                "spriteWidth": 16,
                "spriteHeight": 16,
                "frameCount": 5
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with hidden progress bar
        run: bun packages/snake/dist/index.js
        env:
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_OUTPUTS: "dist/snake/hidden-progress-bar.svg?palette=github-light"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          INPUT_HIDE_PROGRESS_BAR: "true"
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "follow",
                "prefix": "Contributions: ",
                "showCount": true,
                "color": "#1f883d"
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with spacing control test
        run: bun packages/snake/dist/index.js
        env:
          INPUT_GITHUB_USER_NAME: diverger
          INPUT_OUTPUTS: "dist/snake/with-spacing-control.svg?palette=github-light"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "follow",
                "prefix": "üéØ ",
                "suffix": " commits",
                "showCount": true,
                "spacing": 20,
                "color": "#0969da"
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify all snake outputs exist
        run: |
          echo "Checking what files were created..."
          ls -la dist/snake/
          test -f dist/snake/light.svg
          test -f dist/snake/dark.svg
          test -f dist/snake/with-image.svg
          test -f dist/snake/with-image-all-positions.svg
          test -f dist/snake/with-sprite-sheet.svg
          test -f dist/snake/with-multi-level-sprites.svg
          test -f dist/snake/with-empty-cell-animation.svg
          test -f dist/snake/hidden-progress-bar.svg
          test -f dist/snake/with-spacing-control.svg
          echo "‚úÖ All snake output files generated successfully"

          # Verify static image is embedded as data URI
          if grep -q "data:image" dist/snake/with-image.svg; then
            echo "‚úÖ Static image embedded as data URI"
          else
            echo "‚ùå Static image NOT embedded"
            exit 1
          fi

          # Verify sprite sheet
          if grep -q "<image" dist/snake/with-sprite-sheet.svg && grep -q "<symbol" dist/snake/with-sprite-sheet.svg; then
            echo "‚úÖ Sprite sheet with symbols found"
          else
            echo "‚ùå Sprite sheet elements NOT found"
            exit 1
          fi

          # Verify hidden progress bar
          if grep -q "opacity: 0" dist/snake/hidden-progress-bar.svg && grep -q "contrib-counter" dist/snake/hidden-progress-bar.svg; then
            echo "‚úÖ Hidden progress bar test passed"
          else
            echo "‚ùå Hidden progress bar test failed"
            exit 1
          fi

      - name: Upload PR preview artifacts
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == true
        uses: actions/upload-artifact@v4
        with:
          name: contrib-preview
          path: |
            dist/breathing-contrib/*.svg
            dist/blinking-contrib/*.svg
            dist/snake/*.svg
          retention-days: 7

      - name: Publish to output branch
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false)
        uses: crazy-max/ghaction-github-pages@v4.1.0
        with:
          target_branch: output
          build_dir: dist
          commit_message: "Update output [skip ci]"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
