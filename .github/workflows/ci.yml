name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Type check
        run: bun run type || echo "Type check script not found, skipping..."

      - name: Lint
        run: bun run lint || echo "Lint script not found, skipping..."

      - name: Run tests
        run: bun test || echo "No tests found yet"

  test-local-action:
    runs-on: ubuntu-latest
    needs: lint-and-test
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build actions
        run: bun run build

      - name: Create output directories
        run: |
          mkdir -p dist/breathing-contrib
          mkdir -p dist/blinking-contrib
          mkdir -p dist/snake

      - name: Generate breathing contribution (light theme)
        run: bun dist/breathing-contrib/index.js
        env:
          INPUT_GITHUB_USER_NAME: ${{ github.repository_owner }}
          INPUT_OUTPUT_PATH: dist/breathing-contrib/light.svg
          INPUT_PERIOD: "6"
          INPUT_COLOR_LEVELS: "#ebedf0,#9be9a8,#40c463,#30a14e,#216e39"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate breathing contribution (dark theme)
        run: bun dist/breathing-contrib/index.js
        env:
          INPUT_GITHUB_USER_NAME: ${{ github.repository_owner }}
          INPUT_OUTPUT_PATH: dist/breathing-contrib/dark.svg
          INPUT_PERIOD: "6"
          INPUT_COLOR_LEVELS: "#161b22,#0e4429,#006d32,#26a641,#39d353"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate blinking contribution (light theme)
        run: bun dist/blinking-contrib/index.js
        env:
          INPUT_GITHUB_USER_NAME: ${{ github.repository_owner }}
          INPUT_OUTPUT_PATH: dist/blinking-contrib/light.svg
          INPUT_FRAME_DURATION: "0.8"
          INPUT_FADE_IN_DURATION: "0.2"
          INPUT_FADE_OUT_DURATION: "0.4"
          INPUT_TEXT_FRAME_DURATION: "2.0"
          INPUT_COLOR_LEVELS: "#ebedf0,#9be9a8,#40c463,#30a14e,#216e39"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate blinking contribution (dark theme)
        run: bun dist/blinking-contrib/index.js
        env:
          INPUT_GITHUB_USER_NAME: ${{ github.repository_owner }}
          INPUT_OUTPUT_PATH: dist/blinking-contrib/dark.svg
          INPUT_FRAME_DURATION: "0.8"
          INPUT_FADE_IN_DURATION: "0.2"
          INPUT_FADE_OUT_DURATION: "0.4"
          INPUT_ENDING_TEXT: "diverger"
          INPUT_TEXT_FRAME_DURATION: "2.0"
          INPUT_COLOR_LEVELS: "#161b22,#0e4429,#006d32,#26a641,#39d353"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake contribution (light theme)
        run: bun dist/snake/index.js
        env:
          INPUT_GITHUB_USER_NAME: ${{ github.repository_owner }}
          INPUT_OUTPUTS: "dist/snake/light.svg?palette=github-light"
          INPUT_FRAME_DURATION: "100"  # default: 100ms per frame
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          # Multiple displays example: fixed text + dynamic count + percentage with font styles
          INPUT_COUNTER_DISPLAYS: |
            [
              {"position": "top-left", "text": "GitHub Contributions", "color": "#1f883d", "fontSize": 14, "fontWeight": "bold"},
              {"position": "top-right", "prefix": "Total: ", "suffix": " commits", "showCount": true, "showPercentage": true, "color": "#bf3989", "fontStyle": "italic"},
              {"position": "follow", "prefix": "üéØ ", "suffix": " commits", "showCount": true, "showPercentage": true, "color": "#d29922", "fontWeight": "bold", "fontStyle": "italic"}
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake contribution (dark theme)
        run: bun dist/snake/index.js
        env:
          INPUT_GITHUB_USER_NAME: ${{ github.repository_owner }}
          INPUT_OUTPUTS: "dist/snake/dark.svg?palette=github-dark"
          INPUT_FRAME_DURATION: "100"  # default: 100ms per frame
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          # Single counter following progress bar
          INPUT_COUNTER_DISPLAYS: |
            [
              {"position": "follow", "prefix": "üéØ ", "suffix": " contributions", "color": "#7ee787"}
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with static image (tree.png test)
        run: bun dist/snake/index.js
        env:
          INPUT_GITHUB_USER_NAME: ${{ github.repository_owner }}
          INPUT_OUTPUTS: "dist/snake/with-image.svg?palette=github-light"
          INPUT_FRAME_DURATION: "100"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          # Test image placeholder syntax: {img:0} embeds image inline with text
          # Note: width/height are display sizes (how it appears in SVG), not original image dimensions
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "top-left",
                "prefix": "{img:0} ",
                "suffix": " contributions",
                "images": [
                  {
                    "url": ".github/assets/tree.png",
                    "width": 32,
                    "height": 32,
                    "anchorY": 0.875
                  }
                ]
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with images in all positions
        run: bun dist/snake/index.js
        env:
          INPUT_GITHUB_USER_NAME: ${{ github.repository_owner }}
          INPUT_OUTPUTS: "dist/snake/with-image-all-positions.svg?palette=github-light"
          INPUT_FRAME_DURATION: "100"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          # Test images in all three positions: top-left, top-right, follow
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "top-left",
                "prefix": "{img:0} ",
                "suffix": "",
                "fontSize": 14,
                "images": [
                  {
                    "url": ".github/assets/tree.png",
                    "width": 24,
                    "height": 24,
                    "anchorY": 0.8
                  }
                ]
              },
              {
                "position": "top-right",
                "prefix": "",
                "suffix": " {img:0}",
                "fontSize": 14,
                "images": [
                  {
                    "url": ".github/assets/tree.png",
                    "width": 24,
                    "height": 24,
                    "anchorY": 0.8
                  }
                ]
              },
              {
                "position": "follow",
                "prefix": "{img:0} ",
                "suffix": " commits",
                "fontSize": 12,
                "images": [
                  {
                    "url": ".github/assets/tree.png",
                    "width": 20,
                    "height": 20,
                    "anchorY": 0.75
                  }
                ]
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate snake with sprite sheet animation
        run: bun dist/snake/index.js
        env:
          INPUT_GITHUB_USER_NAME: ${{ github.repository_owner }}
          INPUT_OUTPUTS: "dist/snake/with-sprite-sheet.svg?palette=github-light"
          INPUT_FRAME_DURATION: "100"
          INPUT_SHOW_CONTRIBUTION_COUNTER: "true"
          # Test sprite sheet with dynamic speed (contribution-driven animation)
          INPUT_COUNTER_DISPLAYS: |
            [
              {
                "position": "follow",
                "prefix": "{img:0} ",
                "suffix": " commits",
                "fontSize": 14,
                "images": [
                  {
                    "url": ".github/assets/sprite.png",
                    "width": 32,
                    "height": 32,
                    "anchor": "center",
                    "sprite": {
                      "framesPerLevel": 8,
                      "frameWidth": 48,
                      "frameHeight": 48,
                      "layout": "horizontal",
                      "mode": "sync",
                      "dynamicSpeed": true
                    }
                  }
                ]
              }
            ]
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify all outputs exist
        run: |
          ls -la dist/
          ls -la dist/breathing-contrib/
          ls -la dist/blinking-contrib/
          ls -la dist/snake/
          test -f dist/breathing-contrib/light.svg
          test -f dist/breathing-contrib/dark.svg
          test -f dist/blinking-contrib/light.svg
          test -f dist/blinking-contrib/dark.svg
          test -f dist/snake/light.svg
          test -f dist/snake/dark.svg
          test -f dist/snake/with-image.svg
          test -f dist/snake/with-image-all-positions.svg
          test -f dist/snake/with-sprite-sheet.svg
          echo "‚úÖ All output files generated successfully"

          # Verify static image is embedded as data URI
          if grep -q "data:image" dist/snake/with-image.svg; then
            echo "‚úÖ Static image embedded as data URI in with-image.svg"
          else
            echo "‚ùå Static image NOT embedded in with-image.svg"
            exit 1
          fi

          # Verify all positions test
          if grep -q "data:image" dist/snake/with-image-all-positions.svg; then
            echo "‚úÖ Images embedded in all-positions test"
          else
            echo "‚ùå Images NOT embedded in all-positions test"
            exit 1
          fi

          # Verify sprite sheet test
          if grep -q "data:image" dist/snake/with-sprite-sheet.svg; then
            echo "‚úÖ Sprite sheet embedded in animation"
          else
            echo "‚ùå Sprite sheet NOT embedded"
            exit 1
          fi

          # Verify sprite sheet has symbol definitions (for frame clipping)
          if grep -q "<symbol" dist/snake/with-sprite-sheet.svg; then
            echo "‚úÖ Sprite sheet frames defined as symbols"
          else
            echo "‚ùå Sprite sheet symbols NOT found"
            exit 1
          fi

      - name: Upload PR preview artifacts
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == true
        uses: actions/upload-artifact@v4
        with:
          name: contrib-preview
          path: |
            dist/breathing-contrib/*.svg
            dist/blinking-contrib/*.svg
            dist/snake/*.svg
          retention-days: 7

      - name: Publish to output branch
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false)
        uses: crazy-max/ghaction-github-pages@v4.1.0
        with:
          target_branch: output
          build_dir: dist
          commit_message: "Update output [skip ci]"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
